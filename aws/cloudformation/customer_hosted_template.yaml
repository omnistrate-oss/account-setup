AWSTemplateFormatVersion: '2010-09-09'
Description: 'Omnistrate CloudFormation template including OIDC provider, IAM policies, roles, and EKS node group describe policy.'

Parameters:
  AccountConfigIdentityId:
    Description: Suffix for the session name in IAM trust policy unique to your account configuration. Equivalent to sts:ExternalId
    Type: String

Resources:
  OIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://oidc.eks.us-west-2.amazonaws.com/id/9AEF0C846C22DEAEFDDD1F98C6AB9FEA
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 9e99a48a9960b14926bb7f3b02e22da2b0ab7280
  AWSLoadBalancerControllerIAMPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: AWSLoadBalancerControllerIAMPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'iam:CreateServiceLinkedRole'
            Condition:
              StringEquals:
                'iam:AWSServiceName': 'elasticloadbalancing.amazonaws.com'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'ec2:DescribeAccountAttributes'
              - 'ec2:DescribeAddresses'
              - 'ec2:DescribeAvailabilityZones'
              - 'ec2:DescribeInternetGateways'
              - 'ec2:DescribeVpcs'
              - 'ec2:DescribeVpcPeeringConnections'
              - 'ec2:DescribeSubnets'
              - 'ec2:DescribeSecurityGroups'
              - 'ec2:DescribeInstances'
              - 'ec2:DescribeNetworkInterfaces'
              - 'ec2:DescribeTags'
              - 'ec2:GetCoipPoolUsage'
              - 'ec2:DescribeCoipPools'
              - 'elasticloadbalancing:DescribeLoadBalancers'
              - 'elasticloadbalancing:DescribeLoadBalancerAttributes'
              - 'elasticloadbalancing:DescribeListeners'
              - 'elasticloadbalancing:DescribeListenerCertificates'
              - 'elasticloadbalancing:DescribeSSLPolicies'
              - 'elasticloadbalancing:DescribeRules'
              - 'elasticloadbalancing:DescribeTargetGroups'
              - 'elasticloadbalancing:DescribeTargetGroupAttributes'
              - 'elasticloadbalancing:DescribeTargetHealth'
              - 'elasticloadbalancing:DescribeTags'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'cognito-idp:DescribeUserPoolClient'
              - 'acm:ListCertificates'
              - 'acm:DescribeCertificate'
              - 'iam:ListServerCertificates'
              - 'iam:GetServerCertificate'
              - 'waf-regional:GetWebACL'
              - 'waf-regional:GetWebACLForResource'
              - 'waf-regional:AssociateWebACL'
              - 'waf-regional:DisassociateWebACL'
              - 'wafv2:GetWebACL'
              - 'wafv2:GetWebACLForResource'
              - 'wafv2:AssociateWebACL'
              - 'wafv2:DisassociateWebACL'
              - 'shield:GetSubscriptionState'
              - 'shield:DescribeProtection'
              - 'shield:CreateProtection'
              - 'shield:DeleteProtection'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'ec2:AuthorizeSecurityGroupIngress'
              - 'ec2:RevokeSecurityGroupIngress'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'ec2:CreateSecurityGroup'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'ec2:CreateTags'
            Condition:
              'Null':
                'aws:RequestTag/elbv2.k8s.aws/cluster': 'false'
              StringEquals:
                ec2:CreateAction: 'CreateSecurityGroup'
            Effect: Allow
            Resource: arn:aws:ec2:*:*:security-group/*
          - Action:
              - 'ec2:CreateTags'
              - 'ec2:DeleteTags'
            Condition:
              'Null':
                'aws:RequestTag/elbv2.k8s.aws/cluster': 'true'
                'aws:ResourceTag/elbv2.k8s.aws/cluster': 'false'
            Effect: Allow
            Resource: arn:aws:ec2:*:*:security-group/*
          - Action:
              - 'ec2:AuthorizeSecurityGroupIngress'
              - 'ec2:RevokeSecurityGroupIngress'
              - 'ec2:DeleteSecurityGroup'
            Condition:
              'Null':
                'aws:ResourceTag/elbv2.k8s.aws/cluster': 'false'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'elasticloadbalancing:CreateLoadBalancer'
              - 'elasticloadbalancing:CreateTargetGroup'
            Condition:
              'Null':
                'aws:RequestTag/elbv2.k8s.aws/cluster': 'false'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'elasticloadbalancing:CreateListener'
              - 'elasticloadbalancing:DeleteListener'
              - 'elasticloadbalancing:CreateRule'
              - 'elasticloadbalancing:DeleteRule'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'elasticloadbalancing:AddTags'
              - 'elasticloadbalancing:RemoveTags'
            Condition:
              'Null':
                'aws:RequestTag/elbv2.k8s.aws/cluster': 'true'
                'aws:ResourceTag/elbv2.k8s.aws/cluster': 'false'
            Effect: Allow
            Resource:
              - 'arn:aws:elasticloadbalancing:*:*:targetgroup/*/*'
              - 'arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*'
              - 'arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*'
          - Action:
              - 'elasticloadbalancing:AddTags'
            Condition:
              'Null':
                'aws:RequestTag/elbv2.k8s.aws/cluster': 'false'
              StringEquals:
                elasticloadbalancing:CreateAction:
                  - 'CreateTargetGroup'
                  - 'CreateLoadBalancer'
            Effect: Allow
            Resource:
              - 'arn:aws:elasticloadbalancing:*:*:targetgroup/*/*'
              - 'arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*'
              - 'arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*'
          - Action:
              - 'elasticloadbalancing:ModifyLoadBalancerAttributes'
              - 'elasticloadbalancing:SetIpAddressType'
              - 'elasticloadbalancing:SetSecurityGroups'
              - 'elasticloadbalancing:SetSubnets'
              - 'elasticloadbalancing:DeleteLoadBalancer'
              - 'elasticloadbalancing:ModifyTargetGroup'
              - 'elasticloadbalancing:ModifyTargetGroupAttributes'
              - 'elasticloadbalancing:DeleteTargetGroup'
            Condition:
              'Null':
                'aws:ResourceTag/elbv2.k8s.aws/cluster': 'false'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'elasticloadbalancing:RegisterTargets'
              - 'elasticloadbalancing:DeregisterTargets'
            Effect: Allow
            Resource: 'arn:aws:elasticloadbalancing:*:*:targetgroup/*/*'
          - Action:
              - 'elasticloadbalancing:SetWebAcl'
              - 'elasticloadbalancing:ModifyListener'
              - 'elasticloadbalancing:AddListenerCertificates'
              - 'elasticloadbalancing:RemoveListenerCertificates'
              - 'elasticloadbalancing:ModifyRule'
            Effect: Allow
            Resource: '*'
  OmnistrateBootstrapPermissionsBoundary:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: omnistrate-bootstrap-permissions-boundary
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'iam:DetachRolePolicy'
              - 'iam:DeleteRolePolicy'
              - 'iam:CreateRole'
              - 'iam:AttachRolePolicy'
              - 'iam:PutRolePolicy'
            Condition:
              ForAnyValue:StringLike:
                'iam:PermissionsBoundary': 'arn:aws:iam::*:policy/omnistrate-bootstrap-permissions-boundary'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'iam:UpdateAssumeRolePolicy'
              - 'iam:GetPolicyVersion'
              - 'iam:CreateServiceSpecificCredential'
              - 'iam:ListRoleTags'
              - 'iam:UpdateOpenIDConnectProviderThumbprint'
              - 'iam:RemoveRoleFromInstanceProfile'
              - 'iam:ListServiceSpecificCredentials'
              - 'iam:AddRoleToInstanceProfile'
              - 'iam:ListAttachedRolePolicies'
              - 'iam:ListOpenIDConnectProviderTags'
              - 'iam:ListRolePolicies'
              - 'iam:DeleteOpenIDConnectProvider'
              - 'iam:ListPolicies'
              - 'iam:UpdateServiceSpecificCredential'
              - 'iam:GetRole'
              - 'iam:GetPolicy'
              - 'iam:RemoveClientIDFromOpenIDConnectProvider'
              - 'iam:ListEntitiesForPolicy'
              - 'iam:DeleteRole'
              - 'iam:DeletePolicy'
              - 'iam:UpdateRoleDescription'
              - 'iam:GetUserPolicy'
              - 'iam:ListGroupsForUser'
              - 'ec2:*'
              - 'iam:DeleteServiceLinkedRole'
              - 'iam:GetGroupPolicy'
              - 'eks:*'
              - 'iam:GetOpenIDConnectProvider'
              - 'iam:GetRolePolicy'
              - 'iam:CreateInstanceProfile'
              - 'iam:UntagRole'
              - 'iam:TagRole'
              - 'iam:TagPolicy'
              - 'iam:ListPoliciesGrantingServiceAccess'
              - 'iam:ResetServiceSpecificCredential'
              - 'iam:ListInstanceProfileTags'
              - 'iam:GetServiceLinkedRoleDeletionStatus'
              - 'iam:PassRole'
              - 'iam:ListPolicyTags'
              - 'iam:CreatePolicyVersion'
              - 'iam:DeleteInstanceProfile'
              - 'iam:GetInstanceProfile'
              - 'iam:ListRoles'
              - 'elasticloadbalancing:*'
              - 'iam:ListUserPolicies'
              - 'iam:ListInstanceProfiles'
              - 'iam:CreateOpenIDConnectProvider'
              - 'iam:CreatePolicy'
              - 'iam:CreateServiceLinkedRole'
              - 'iam:ListPolicyVersions'
              - 'iam:ListOpenIDConnectProviders'
              - 'iam:UntagPolicy'
              - 'iam:UpdateRole'
              - 'iam:UntagOpenIDConnectProvider'
              - 'iam:AddClientIDToOpenIDConnectProvider'
              - 'iam:UntagInstanceProfile'
              - 'iam:DeleteServiceSpecificCredential'
              - 'iam:TagOpenIDConnectProvider'
              - 'iam:DeletePolicyVersion'
              - 'iam:TagInstanceProfile'
              - 'iam:SetDefaultPolicyVersion'
              - 'route53:*'
              - 's3:*'
              - 'secretsmanager:*'
              - 'kafkaconnect:*'
              - 'logs:*'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'iam:CreateServiceLinkedRole'
            Effect: Allow
            Resource:
              - 'arn:aws:iam::*:role/aws-service-role/kafkaconnect.amazonaws.com/AWSServiceRoleForKafkaConnect*'
            Condition:
              StringLike:
                'iam:AWSServiceName': 'kafkaconnect.amazonaws.com'
          - Action:
              - 'iam:AttachRolePolicy'
              - 'iam:PutRolePolicy'
            Effect: Allow
            Resource:
              - 'arn:aws:iam::*:role/aws-service-role/kafkaconnect.amazonaws.com/AWSServiceRoleForKafkaConnect*'
          - Action:
              - 'iam:CreateServiceLinkedRole'
            Effect: Allow
            Resource:
              - 'arn:aws:iam::*:role/aws-service-role/delivery.logs.amazonaws.com/AWSServiceRoleForLogDelivery*'
            Condition:
              StringLike:
                'iam:AWSServiceName': 'delivery.logs.amazonaws.com'
          - Sid: 'S3Access'
            Effect: Allow
            Action:
              - 's3:*'
            Resource:
              - Fn::Sub: 'arn:aws:s3:::omnistrate-${AWS::AccountId}-dp-pulumi'
              - Fn::Sub: 'arn:aws:s3:::omnistrate-${AWS::AccountId}-dp-pulumi/*'
  OmnistrateBootstrapPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: omnistrate-bootstrap-policy
      Path: "/"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'iam:DetachRolePolicy'
              - 'iam:DeleteRolePolicy'
              - 'iam:CreateRole'
              - 'iam:AttachRolePolicy'
              - 'iam:PutRolePolicy'
            Resource: '*'
            Condition:
              ForAnyValue:StringLike:
                'iam:PermissionsBoundary': 'arn:aws:iam::*:policy/omnistrate-bootstrap-permissions-boundary'
          - Effect: Allow
            Action:
              - 'iam:UpdateAssumeRolePolicy'
              - 'iam:GetPolicyVersion'
              - 'iam:CreateServiceSpecificCredential'
              - 'iam:ListRoleTags'
              - 'iam:UpdateOpenIDConnectProviderThumbprint'
              - 'iam:RemoveRoleFromInstanceProfile'
              - 'iam:ListServiceSpecificCredentials'
              - 'iam:AddRoleToInstanceProfile'
              - 'iam:ListAttachedRolePolicies'
              - 'iam:ListOpenIDConnectProviderTags'
              - 'iam:ListRolePolicies'
              - 'iam:DeleteOpenIDConnectProvider'
              - 'iam:ListPolicies'
              - 'iam:UpdateServiceSpecificCredential'
              - 'iam:GetRole'
              - 'iam:GetPolicy'
              - 'iam:RemoveClientIDFromOpenIDConnectProvider'
              - 'iam:ListEntitiesForPolicy'
              - 'iam:DeleteRole'
              - 'iam:UpdateRoleDescription'
              - 'iam:GetUserPolicy'
              - 'iam:ListGroupsForUser'
              - 'ec2:*'
              - 'iam:DeleteServiceLinkedRole'
              - 'iam:GetGroupPolicy'
              - 'eks:*'
              - 'iam:GetOpenIDConnectProvider'
              - 'iam:GetRolePolicy'
              - 'iam:CreateInstanceProfile'
              - 'iam:UntagRole'
              - 'iam:TagRole'
              - 'iam:TagPolicy'
              - 'iam:ListPoliciesGrantingServiceAccess'
              - 'iam:ResetServiceSpecificCredential'
              - 'iam:ListInstanceProfileTags'
              - 'iam:GetServiceLinkedRoleDeletionStatus'
              - 'iam:ListInstanceProfilesForRole'
              - 'iam:PassRole'
              - 'iam:ListPolicyTags'
              - 'iam:CreatePolicyVersion'
              - 'iam:DeleteInstanceProfile'
              - 'iam:GetInstanceProfile'
              - 'iam:ListRoles'
              - 'elasticloadbalancing:*'
              - 'iam:ListUserPolicies'
              - 'iam:ListInstanceProfiles'
              - 'iam:CreateOpenIDConnectProvider'
              - 'iam:CreatePolicy'
              - 'iam:CreateServiceLinkedRole'
              - 'iam:ListPolicyVersions'
              - 'iam:ListOpenIDConnectProviders'
              - 'iam:UntagPolicy'
              - 'iam:UpdateRole'
              - 'iam:UntagOpenIDConnectProvider'
              - 'iam:AddClientIDToOpenIDConnectProvider'
              - 'iam:UntagInstanceProfile'
              - 'iam:DeleteServiceSpecificCredential'
              - 'iam:TagOpenIDConnectProvider'
              - 'iam:DeletePolicyVersion'
              - 'iam:TagInstanceProfile'
              - 'iam:SetDefaultPolicyVersion'
            Resource: '*'
          - Effect: Allow
            Action: 'autoscaling:*'
            Resource: '*'
          - Sid: 'S3Access'
            Effect: Allow
            Action: 's3:*'
            Resource:
              - !Sub 'arn:aws:s3:::omnistrate-${AWS::AccountId}-dp-pulumi'
              - !Sub 'arn:aws:s3:::omnistrate-${AWS::AccountId}-dp-pulumi/*'
  OmnistrateInfrastructureProvisioningPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: omnistrate-infrastructure-provisioning-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'iam:Get*'
              - 'iam:List*'
            Effect: Allow
            Resource: '*'
          - Action:
              - 'iam:GetRole'
              - 'iam:PassRole'
              - 'iam:ListAttachedRolePolicies'
            Effect: Allow
            Resource:
              - Fn::Sub: 'arn:aws:iam::*:role/ows-ec2-node-group-role'
              - Fn::Sub: 'arn:aws:iam::*:role/omnistrate-eks-iam-role'
              - Fn::Sub: 'arn:aws:iam::*:role/omnistrate-ec2-node-group-iam-role'
              - Fn::Sub: 'arn:aws:iam::*:role/aws-service-role/eks-nodegroup.amazonaws.com/AWSServiceRoleForAmazonEKSNodegroup'
          - Action:
              - 'iam:*'
            Effect: Allow
            Resource:
              - Fn::Sub: 'arn:aws:iam::*:role/omnistrate/*'
              - Fn::Sub: 'arn:aws:iam::*:policy/omnistrate/*'
          - Action:
              - 's3:*'
              - 'ec2:*'
              - 'elasticloadbalancing:*'
              - 'eks:*'
            Effect: Allow
            Resource: '*'

  OmnistrateBootstrapRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "sts:AssumeRoleWithWebIdentity"
            Effect: Allow
            Principal:
              Federated: !Sub "arn:aws:iam::${AWS::AccountId}:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/9AEF0C846C22DEAEFDDD1F98C6AB9FEA"
            Condition:
              StringEquals:
                "oidc.eks.us-west-2.amazonaws.com/id/9AEF0C846C22DEAEFDDD1F98C6AB9FEA:sub": "system:serviceaccount:bootstrap:bootstrap-sa"
                "sts:RoleSessionName": !Sub "bootstrap-session-${AccountConfigIdentityId}"
      ManagedPolicyArns:
        - !Sub "arn:aws:iam::${AWS::AccountId}:policy/omnistrate-bootstrap-policy"
      MaxSessionDuration: 3600
      RoleName: "omnistrate-bootstrap-role"
      Path: "/"

  OmnistrateEC2NodeGroupIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: "ec2.amazonaws.com"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
        - "arn:aws:iam::aws:policy/AutoScalingFullAccess"
      MaxSessionDuration: 3600
      RoleName: "omnistrate-ec2-node-group-iam-role"
      Path: "/"
      Policies:
        - PolicyName: "eks-nodegroup-describe-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: "eks:DescribeNodegroup"
                Effect: Allow
                Resource: "*"

  OmnistrateEKSIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: "eks.amazonaws.com"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        - "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
        - "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
        - "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
      MaxSessionDuration: 3600
      RoleName: "omnistrate-eks-iam-role"
      Path: "/"

  OmnistrateEC2NodeGroupIAMRoleEKSNodDescPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: eks-nodegroup-describe-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "eks:DescribeNodegroup"
            Effect: Allow
            Resource: "*"
      Roles:
        - Ref: OmnistrateEC2NodeGroupIAMRole

Outputs:
  BootstrapRole:
    Value: !GetAtt OmnistrateBootstrapRole.Arn
    Description: "ARN of the Omnistrate Bootstrap Role"
